version: "3"

services:
  dht-a:
    build: .
    environment:
      - NODE_ID=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA # 0
      - NODE_ALT_HOST=dht-a
    command: ["dht", "start"]

  dht-b:
    build: .
    environment:
      - NODE_ID=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ # 1
      - NODE_ALT_HOST=dht-b
    command: ["dht", "join", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "dht-a:3000"]
    depends_on:
      - dht-a

  dht-c:
    build: .
    environment:
      - NODE_ID=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA # 2
      - NODE_ALT_HOST=dht-c
    command: ["dht", "join", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "dht-a:3000"]
    depends_on:
      - dht-a

  dht-d:
    build: .
    environment:
      - NODE_ID=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ # 3
      - NODE_ALT_HOST=dht-d
    command: ["dht", "join", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "dht-a:3000"]
    depends_on:
      - dht-a

  peer-a:
    build: .
    environment:
      - CLIENT_NODES=["dht-a:3000", "dht-b:3000", "dht-c:3000", "dht-d:3000"]
    volumes:
      - ./scratch:/scratch
    command: ["peer", "daemon"]

  peer-b:
    build: .
    environment:
      - CLIENT_NODES=["dht-a:3000", "dht-b:3000", "dht-c:3000", "dht-d:3000"]
    volumes:
      - ./scratch:/scratch
    command: ["peer", "daemon"]
